-- // GUI TO LUA \\ --

-- // INSTANCES: 16 | SCRIPTS: 3 | MODULES: 3 \\ --

local UI = {}

-- // StarterGui.ScreenGui \\ --
UI["1"] = Instance.new("ScreenGui", game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui"))
UI["1"]["ZIndexBehavior"] = Enum.ZIndexBehavior.Sibling

-- // StarterGui.ScreenGui.ButtonFrame \\ --
UI["2"] = Instance.new("Frame", UI["1"])
UI["2"]["BorderSizePixel"] = 0
UI["2"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
UI["2"]["Size"] = UDim2.new(0, 72, 0, 59)
UI["2"]["Position"] = UDim2.new(0.95036, 0, 0.9108, 0)
UI["2"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["2"]["Name"] = [[ButtonFrame]]

-- // StarterGui.ScreenGui.ButtonFrame.  \\ --
UI["3"] = Instance.new("TextButton", UI["2"])
UI["3"]["BorderSizePixel"] = 0
UI["3"]["TextSize"] = 14
UI["3"]["TextColor3"] = Color3.fromRGB(0, 0, 0)
UI["3"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
UI["3"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["3"]["Size"] = UDim2.new(0, 75, 0, 59)
UI["3"]["Name"] = [[ ]]
UI["3"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["3"]["Text"] = [[Open/Close]]
UI["3"]["Position"] = UDim2.new(-0.02345, 0, -0.00108, 0)

-- // StarterGui.ScreenGui.ButtonFrame. .LocalScript \\ --
UI["4"] = Instance.new("LocalScript", UI["3"])


-- // StarterGui.ScreenGui.Frame \\ --
UI["5"] = Instance.new("Frame", UI["1"])
UI["5"]["BorderSizePixel"] = 0
UI["5"]["BackgroundColor3"] = Color3.fromRGB(136, 136, 136)
UI["5"]["Size"] = UDim2.new(0, 391, 0, 235)
UI["5"]["Position"] = UDim2.new(0.6895, 0, 0.00879, 0)
UI["5"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)

-- // StarterGui.ScreenGui.Frame.TextLabel \\ --
UI["6"] = Instance.new("TextLabel", UI["5"])
UI["6"]["BorderSizePixel"] = 0
UI["6"]["BackgroundColor3"] = Color3.fromRGB(62, 62, 62)
UI["6"]["TextSize"] = 44
UI["6"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["6"]["TextColor3"] = Color3.fromRGB(255, 255, 255)
UI["6"]["Size"] = UDim2.new(0, 393, 0, 50)
UI["6"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["6"]["Text"] = [[Hatchi's menu V1]]
UI["6"]["Position"] = UDim2.new(-0.00313, 0, -0.0002, 0)

-- // StarterGui.ScreenGui.Frame.TextLabel \\ --
UI["7"] = Instance.new("TextLabel", UI["5"])
UI["7"]["BorderSizePixel"] = 0
UI["7"]["TextXAlignment"] = Enum.TextXAlignment.Left
UI["7"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
UI["7"]["TextSize"] = 38
UI["7"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["7"]["TextColor3"] = Color3.fromRGB(0, 0, 0)
UI["7"]["Size"] = UDim2.new(0, 157, 0, 38)
UI["7"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["7"]["Text"] = [[ Fly  Press X]]
UI["7"]["Position"] = UDim2.new(0.05451, 0, 0.27656, 0)

-- // StarterGui.ScreenGui.Free Cam (shift + C) \\ --
UI["8"] = Instance.new("Script", UI["1"])
UI["8"]["Name"] = [[Free Cam (shift + C)]]

-- // StarterGui.ScreenGui.Free Cam (shift + C).FreeCamera \\ --
UI["9"] = Instance.new("ScreenGui", UI["8"])
UI["9"]["DisplayOrder"] = 10
UI["9"]["Enabled"] = false
UI["9"]["Name"] = [[FreeCamera]]

-- // StarterGui.ScreenGui.Free Cam (shift + C).FreeCamera.FreeCamera \\ --
UI["a"] = Instance.new("LocalScript", UI["9"])
UI["a"]["Name"] = [[FreeCamera]]

-- // StarterGui.ScreenGui.Free Cam (shift + C).FreeCamera.FreeCamera.Maid \\ --
UI["b"] = Instance.new("ModuleScript", UI["a"])
UI["b"]["Name"] = [[Maid]]

-- // StarterGui.ScreenGui.Free Cam (shift + C).FreeCamera.FreeCamera.Spring \\ --
UI["c"] = Instance.new("ModuleScript", UI["a"])
UI["c"]["Name"] = [[Spring]]

-- // StarterGui.ScreenGui.Free Cam (shift + C).FreeCamera.TopBar \\ --
UI["d"] = Instance.new("Frame", UI["9"])
UI["d"]["ZIndex"] = 10
UI["d"]["BorderSizePixel"] = 0
UI["d"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0)
UI["d"]["Size"] = UDim2.new(1, 0, 0.128, 0)
UI["d"]["Position"] = UDim2.new(0, 0, 0, -36)
UI["d"]["BorderColor3"] = Color3.fromRGB(28, 43, 54)
UI["d"]["Name"] = [[TopBar]]

-- // StarterGui.ScreenGui.Free Cam (shift + C).FreeCamera.BottomBar \\ --
UI["e"] = Instance.new("Frame", UI["9"])
UI["e"]["ZIndex"] = 10
UI["e"]["BorderSizePixel"] = 0
UI["e"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0)
UI["e"]["AnchorPoint"] = Vector2.new(0, 1)
UI["e"]["Size"] = UDim2.new(1, 0, 0.128, 0)
UI["e"]["Position"] = UDim2.new(0, 0, 1, 0)
UI["e"]["BorderColor3"] = Color3.fromRGB(28, 43, 54)
UI["e"]["Name"] = [[BottomBar]]

-- // StarterGui.ScreenGui.MainModule \\ --
UI["f"] = Instance.new("ModuleScript", UI["1"])
UI["f"]["Name"] = [[MainModule]]

-- // StarterGui.ScreenGui.MainModule.Noclip \\ --
UI["10"] = Instance.new("LocalScript", UI["f"])
UI["10"]["Name"] = [[Noclip]]

-- Require G2L wrapper
local G2L_REQUIRE = require;
local G2L_MODULES = {};
local function require(Module:ModuleScript)
    local ModuleState = G2L_MODULES[Module];
    if ModuleState then
        if not ModuleState.Required then
            ModuleState.Required = true;
            ModuleState.Value = ModuleState.Closure();
        end
        return ModuleState.Value;
    end;
    return G2L_REQUIRE(Module);
end

G2L_MODULES[UI["b"]] = {
Closure = function()
    local script = UI["b"]
-- Maid class

local destructors = {
	['function'] = function(item)
		item()
	end;
	['RBXScriptConnection'] = function(item)
		item:Disconnect()
	end;
	['Instance'] = function(item)
		item:Destroy()
	end;
}

local Maid = {}
Maid.__index = Maid

function Maid:Mark(item)
	if destructors[typeof(item)] then
		self.trash[#self.trash + 1] = item
	else
		error(('Maid does not support type "%s"'):format(typeof(item)), 2)
	end
end

function Maid:Unmark(item)
	if item then
		local trash = self.trash
		for i = 1, #trash do
			if trash[i] == item then
				table.remove(trash, i)
				break
			end
		end
	else
		self.trash = {}
	end
end

function Maid:Sweep()
	local trash = self.trash
	for i = 1, #trash do
		local item = trash[i]
		destructors[typeof(item)](item)
	end
	self.trash = {}
end

function Maid.new()
	local self = setmetatable({}, Maid)
	self.trash = {}
	return self
end

return Maid.new()

end
}
G2L_MODULES[UI["c"]] = {
Closure = function()
    local script = UI["c"]

local Spring = {}
Spring.__index = Spring

function Spring:Update(dt)
	local t, k, d, x0, v0 = self.t, self.k, self.d, self.x, self.v
	local a0 = k*(t - x0) + v0*d
	local v1 = v0 + a0*(dt/2)
	local a1 = k*(t - (x0 + v0*(dt/2))) + v1*d
	local v2 = v0 + a1*(dt/2)
	local a2 = k*(t - (x0 + v1*(dt/2))) + v2*d
	local v3 = v0 + a2*dt
	local x4 = x0 + (v0 + 2*(v1 + v2) + v3)*(dt/6)
	self.x, self.v = x4, v0 + (a0 + 2*(a1 + a2) + k*(t - (x0 + v2*dt)) + v3*d)*(dt/6)
	return x4
end

function Spring.new(stiffness, dampingCoeff, dampingRatio, initialPos)
	local self = setmetatable({}, Spring)

	dampingRatio = dampingRatio or 1
	local m = dampingCoeff*dampingCoeff/(4*stiffness*dampingRatio*dampingRatio)
	self.k = stiffness/m
	self.d = -dampingCoeff/m
	self.x = initialPos
	self.t = initialPos
	self.v = initialPos*0

	return self
end

return Spring

end
}
G2L_MODULES[UI["f"]] = {
Closure = function()
    local script = UI["f"]
local module = {}

function module.noclip(target)
	_G.target = target
	local target = game:GetService("Players"):FindFirstChild(_G.target)
	local Noclip = script.Noclip:Clone()
	Noclip.Parent = target.Character
end

return module

end
}
-- // StarterGui.ScreenGui.ButtonFrame. .LocalScript \\ --
local function SCRIPT_4()
local script = UI["4"]
	local frame = script.Parent.Parent.Parent:WaitForChild('TextLabel')
	script.Parent.MouseButton1Click:connect(function()
		frame.Visible = not frame.Visible
	end)
end
task.spawn(SCRIPT_4)
-- // StarterGui.ScreenGui.Free Cam (shift + C).FreeCamera.FreeCamera \\ --
local function SCRIPT_a()
local script = UI["a"]
	------------------------------------------------
	--
	-- Freecam.lua
	-- Written by: Quenty
	-- Edited by: TheGamer101, to make it work without the screen gui, remove the Class library
	-- and add alternative key bindings.
	------------------------------------------------
	
	-- To exit and enter free camera, use key shortcut Left Shift + P
	
	local player = game:GetService("Players")
	while not player.LocalPlayer do player.Changed:wait() end
	player = player.LocalPlayer
	local camera = workspace.CurrentCamera
	
	local RS  = game:GetService("RunService")
	local UIS = game:GetService("UserInputService")
	local StarterGui = game:GetService("StarterGui")
	
	local Spring = require(script:WaitForChild("Spring"))
	local Maid = require(script:WaitForChild("Maid"))
	
	local WasGuiVisible = {}
	function ToggleGui(on)
		if not on then
			WasGuiVisible["PointsNotificationsActive"] = StarterGui:GetCore("PointsNotificationsActive")
			WasGuiVisible["BadgesNotificationsActive"] = StarterGui:GetCore("BadgesNotificationsActive")
			WasGuiVisible["Health"] = StarterGui:GetCoreGuiEnabled(Enum.CoreGuiType.Health)
			WasGuiVisible["Backpack"] = StarterGui:GetCoreGuiEnabled(Enum.CoreGuiType.Backpack)
			WasGuiVisible["PlayerList"] = StarterGui:GetCoreGuiEnabled(Enum.CoreGuiType.PlayerList)
			WasGuiVisible["Chat"] = StarterGui:GetCoreGuiEnabled(Enum.CoreGuiType.Chat)
		end
	
		local function GuiOn(name)
			if on == false then
				return false
			end
			if WasGuiVisible[name] ~= nil then
				return WasGuiVisible[name]
			end
			return true
		end
	
		StarterGui:SetCore("PointsNotificationsActive", GuiOn("PointsNotificationsActive"))
		StarterGui:SetCore("BadgesNotificationsActive", GuiOn("BadgesNotificationsActive"))
	
		StarterGui:SetCoreGuiEnabled(Enum.CoreGuiType.Health, GuiOn("Health"))
		StarterGui:SetCoreGuiEnabled(Enum.CoreGuiType.Backpack, GuiOn("Backpack"))
		StarterGui:SetCoreGuiEnabled(Enum.CoreGuiType.PlayerList, GuiOn("PlayerList"))
		StarterGui:SetCoreGuiEnabled(Enum.CoreGuiType.Chat, GuiOn("Chat"))
	end
	
	------------------------------------------------
	
	local LETTERBOX = false
	local DEF_FOV = 70
	local NM_ZOOM = math.tan(DEF_FOV * math.pi/360)
	local LVEL_GAIN = Vector3.new(1, 0.75, 1)
	local RVEL_GAIN = Vector2.new(0.85, 1)/128
	local FVEL_GAIN = -330
	local DEADZONE = 0.125
	local FOCUS_OFFSET = CFrame.new(0, 0, -16)
	
	local DIRECTION_LEFT = 1
	local DIRECTION_RIGHT = 2
	local DIRECTION_FORWARD = 3
	local DIRECTION_BACKWARD = 4
	local DIRECTION_UP = 5
	local DIRECTION_DOWN = 6
	
	local KEY_MAPPINGS = {
		[DIRECTION_LEFT] = {Enum.KeyCode.A, Enum.KeyCode.H},
		[DIRECTION_RIGHT] = {Enum.KeyCode.D, Enum.KeyCode.K},
		[DIRECTION_FORWARD] = {Enum.KeyCode.W, Enum.KeyCode.U},
		[DIRECTION_BACKWARD] = {Enum.KeyCode.S, Enum.KeyCode.J},
		[DIRECTION_UP] = {Enum.KeyCode.E, Enum.KeyCode.Y},
		[DIRECTION_DOWN] = {Enum.KeyCode.Q, Enum.KeyCode.I},
	}
	
	function CreateLetterBox()
		local topBar = Instance.new("Frame")
		topBar.Name = "TopBar"
		topBar.Position = UDim2.new(0, 0, 0, -36)
		topBar.Size = UDim2.new(1, 0, 0.128, 0)
		topBar.ZIndex = 10
		topBar.BackgroundColor3 = Color3.new(0, 0, 0)
		topBar.BorderSizePixel = 0
		topBar.Visible = false
		topBar.Parent = script.Parent
	
		local bottomBar = topBar:Clone()
		bottomBar.Name = "BottomBar"
		bottomBar.Position = UDim2.new(0, 0, 1, 0)
		bottomBar.AnchorPoint = Vector2.new(0, 1)
		bottomBar.Parent = script.Parent
		return script.Parent
	end
	
	------------------------------------------------
	
	local screenGuis = {}
	local freeCamEnabled = false
	
	local stateRot = Vector2.new()
	local panDeltaGamepad = Vector2.new()
	local panDeltaMouse = Vector2.new()
	
	local velSpring = Spring.new(7/9, 1/3, 1, Vector3.new())
	local rotSpring = Spring.new(7/9, 1/3, 1, Vector2.new())
	local fovSpring = Spring.new(2,   1/3, 1, 0)
	
	local letterbox = LETTERBOX and CreateLetterBox()
	
	local gp_x  = 0
	local gp_z  = 0
	local gp_l1 = 0
	local gp_r1 = 0
	local rate_fov = 0
	
	local SpeedModifier = 1
	
	------------------------------------------------
	
	local function Clamp(x, min, max)
		return x < min and min or x > max and max or x
	end
	
	local function GetChar()
		local character = player.Character
		if character then
			return character:FindFirstChildOfClass("Humanoid"), character:FindFirstChild("HumanoidRootPart")
		end
	end
	
	local function InputCurve(x)
		local s = math.abs(x)
		if s > DEADZONE then
			s = 0.255000975*(2^(2.299113817*s) - 1)
			return x > 0 and (s > 1 and 1 or s) or (s > 1 and -1 or -s)
		end
		return 0
	end
	
	------------------------------------------------
	
	local function ProcessInput(input, processed)
		local userInputType = input.UserInputType
		if userInputType == Enum.UserInputType.Gamepad1 then
			local keycode = input.KeyCode
			if keycode == Enum.KeyCode.Thumbstick2 then
				local pos = input.Position
				panDeltaGamepad = Vector2.new(InputCurve(pos.y), InputCurve(-pos.x))*7
			elseif keycode == Enum.KeyCode.Thumbstick1 then
				local pos = input.Position
				gp_x = InputCurve(pos.x)
				gp_z = InputCurve(-pos.y)
			elseif keycode == Enum.KeyCode.ButtonL2 then
				gp_l1 = input.Position.z
			elseif keycode == Enum.KeyCode.ButtonR2 then
				gp_r1 = input.Position.z
			end
		elseif userInputType == Enum.UserInputType.MouseWheel then
			rate_fov = input.Position.Z
		end
	end
	
	UIS.InputChanged:Connect(ProcessInput)
	UIS.InputEnded:Connect(ProcessInput)
	UIS.InputBegan:Connect(ProcessInput)
	
	------------------------------------------------
	
	local function IsDirectionDown(direction)
		for i = 1, #KEY_MAPPINGS[direction] do
			if UIS:IsKeyDown(KEY_MAPPINGS[direction][i]) then
				return true
			end
		end
		return false
	end
	
	local UpdateFreecam do
		local dt = 1/60
		RS.RenderStepped:Connect(function(_dt)
			dt = _dt
		end)
	
		function UpdateFreecam()
			local camCFrame = camera.CFrame
	
			local kx = (IsDirectionDown(DIRECTION_RIGHT) and 1 or 0) - (IsDirectionDown(DIRECTION_LEFT) and 1 or 0)
			local ky = (IsDirectionDown(DIRECTION_UP) and 1 or 0) - (IsDirectionDown(DIRECTION_DOWN) and 1 or 0)
			local kz = (IsDirectionDown(DIRECTION_BACKWARD) and 1 or 0) - (IsDirectionDown(DIRECTION_FORWARD) and 1 or 0)
			local km = (kx * kx) + (ky * ky) + (kz * kz)
			if km > 1e-15 then
				km = ((UIS:IsKeyDown(Enum.KeyCode.LeftShift) or UIS:IsKeyDown(Enum.KeyCode.RightShift)) and 1/4 or 1)/math.sqrt(km)
				kx = kx * km
				ky = ky * km
				kz = kz * km
			end
	
			local dx = kx + gp_x
			local dy = ky + gp_r1 - gp_l1
			local dz = kz + gp_z
	
			velSpring.t = Vector3.new(dx, dy, dz) * SpeedModifier
			rotSpring.t = panDeltaMouse + panDeltaGamepad
			fovSpring.t = Clamp(fovSpring.t + dt * rate_fov*FVEL_GAIN, 5, 120)
	
			local fov  = fovSpring:Update(dt)
			local dPos = velSpring:Update(dt) * LVEL_GAIN
			local dRot = rotSpring:Update(dt) * (RVEL_GAIN * math.tan(fov * math.pi/360) * NM_ZOOM)
	
			rate_fov = 0
			panDeltaMouse = Vector2.new()
	
			stateRot = stateRot + dRot
			stateRot = Vector2.new(Clamp(stateRot.x, -3/2, 3/2), stateRot.y)
	
			local c = CFrame.new(camCFrame.p) * CFrame.Angles(0, stateRot.y, 0) * CFrame.Angles(stateRot.x, 0, 0) * CFrame.new(dPos)
	
			camera.CFrame = c
			camera.Focus = c*FOCUS_OFFSET
			camera.FieldOfView = fov
		end
	end
	
	------------------------------------------------
	
	local function Panned(input, processed)
		if not processed and input.UserInputType == Enum.UserInputType.MouseMovement then
			local delta = input.Delta
			panDeltaMouse = Vector2.new(-delta.y, -delta.x)
		end
	end
	
	------------------------------------------------
	
	local function EnterFreecam()
		ToggleGui(false)
		UIS.MouseIconEnabled = false
		Maid:Mark(UIS.InputBegan:Connect(function(input, processed)
			if input.UserInputType == Enum.UserInputType.MouseButton2 then
				UIS.MouseBehavior = Enum.MouseBehavior.LockCurrentPosition
				local conn = UIS.InputChanged:Connect(Panned)
				repeat
					input = UIS.InputEnded:wait()
				until input.UserInputType == Enum.UserInputType.MouseButton2 or not freeCamEnabled
				panDeltaMouse = Vector2.new()
				panDeltaGamepad = Vector2.new()
				conn:Disconnect()
				if freeCamEnabled then
					UIS.MouseBehavior = Enum.MouseBehavior.Default
				end
			elseif input.KeyCode == Enum.KeyCode.LeftShift or input.KeyCode == Enum.KeyCode.RightShift then
				SpeedModifier = 0.5
			end
		end))
	
		Maid:Mark(UIS.InputEnded:Connect(function(input, processed)
			if input.KeyCode == Enum.KeyCode.LeftShift or input.KeyCode == Enum.KeyCode.RightShift then
				SpeedModifier = 1
			end
		end))
	
		camera.CameraType = Enum.CameraType.Scriptable
	
		local hum, hrp = GetChar()
		if hrp then
			hrp.Anchored = true
		end
		if hum then
			hum.WalkSpeed = 0
			Maid:Mark(hum.Jumping:Connect(function(active)
				if active then
					hum.Jumping = false
				end
			end))
		end
	
		velSpring.t, velSpring.v, velSpring.x = Vector3.new(), Vector3.new(), Vector3.new()
		rotSpring.t, rotSpring.v, rotSpring.x = Vector2.new(), Vector2.new(), Vector2.new()
		fovSpring.t, fovSpring.v, fovSpring.x = camera.FieldOfView, 0, camera.FieldOfView
	
		local camCFrame = camera.CFrame
		local lookVector = camCFrame.lookVector.unit
	
		stateRot = Vector2.new(
			math.asin(lookVector.y),
			math.atan2(-lookVector.z, lookVector.x) - math.pi/2
		)
		panDeltaMouse = Vector2.new()
	
		local playerGui = player:WaitForChild("PlayerGui")
		for _, obj in next, playerGui:GetChildren() do
			if obj:IsA("ScreenGui") and obj.Enabled then
				obj.Enabled = false
				screenGuis[obj] = true
			end
		end
		if LETTERBOX then
			letterbox.Enabled = true
		end
		RS:BindToRenderStep("Freecam", Enum.RenderPriority.Camera.Value, UpdateFreecam)
		freeCamEnabled = true
	end
	
	local function ExitFreecam()
		freeCamEnabled = false
		if LETTERBOX then
			letterbox.Enabled = false
		end
		UIS.MouseIconEnabled = true
		UIS.MouseBehavior = Enum.MouseBehavior.Default
		Maid:Sweep()
		RS:UnbindFromRenderStep("Freecam")
		local hum, hrp = GetChar()
		if hum then
			hum.WalkSpeed = 16
		end
		if hrp then
			hrp.Anchored = false
		end
		camera.FieldOfView = DEF_FOV
		camera.CameraType = Enum.CameraType.Custom
		for obj in next, screenGuis do
			obj.Enabled = true
		end
		screenGuis = {}
		ToggleGui(true)
	end
	
	------------------------------------------------
	
	UIS.InputBegan:Connect(function(input, processed)
		if not processed then
			if UIS:IsKeyDown(Enum.KeyCode.LeftShift)  then
				if UIS:IsKeyDown(Enum.KeyCode.C) then
					if freeCamEnabled then
						ExitFreecam()
					else
						EnterFreecam()
					end
				end
			end
		end
	end)
	
	print("FREE CAM SCRIPT LOADED FOR: ", player, " | Script Edited by Confusen!")
end
task.spawn(SCRIPT_a)
-- // StarterGui.ScreenGui.MainModule.Noclip \\ --
local function SCRIPT_10()
local script = UI["10"]
	--[[VARIABLES]]--
	local Plr = game:GetService("Players").LocalPlayer
	local Char = Plr.Character
	local UIS = game:GetService("UserInputService")
	
	local IsNoclipped = false
	
	--[[CLIP FUNCTION]]--
	local function clip(Character, toggle)
		for _,v in pairs(Character:GetDescendants()) do
			if v:IsA("BasePart") or v:IsA("Part") or v:IsA("MeshPart") then
				v.CanCollide = toggle
			end
		end
	end
	--[[Fly Button thingy]]--
	UIS.InputBegan:Connect(function(Key, GPE)
		if GPE then return end
		
		if Key.KeyCode == Enum.KeyCode.F then
			if Char:FindFirstChild("Humanoid").Health <= 0 then
				IsNoclipped = false
				return
			else
				if not IsNoclipped then
					IsNoclipped = true
					local HRP = Char:FindFirstChild("HumanoidRootPart")
					PlrY = HRP.Position.Y -3.5
					if workspace:FindFirstChild("NoclipPart") then
						workspace:FindFirstChild("NoclipPart"):Destroy()
					end
	
					NoclipPart = Instance.new("Part")
					NoclipPart.Parent = workspace
					NoclipPart.Anchored = true
					NoclipPart.Name = "NoclipPart"
					NoclipPart.Size = Vector3.new(5, 1, 5)
					NoclipPart.Material = Enum.Material.Cobblestone
					NoclipPart.CFrame = CFrame.new(HRP.Position.X, PlrY, HRP.Position.Z)
					NoclipPart.Color = Color3.new(0, .5, 0)
					NoclipPart.Transparency = 0.5
					while IsNoclipped do
						Char = game:GetService("Players").LocalPlayer.Character
						if Char then
							pcall(function()
								clip(Char, false)
							end)
						end
						game:GetService("RunService").Stepped:Wait()
					end
				else
					IsNoclipped = false
					clip(Char, true)
					workspace:FindFirstChild("NoclipPart"):Destroy()
				end
			end
		end
	end)
	
	--[IT DO]]--
	function UpdatePosition()
		if Char.Humanoid.Health <= 0 then
			IsNoclipped = false
			return 
		else
			if workspace:FindFirstChild("NoclipPart") then
				local NoclipPart = workspace:FindFirstChild("NoclipPart")
				local HRP = Char:FindFirstChild("HumanoidRootPart")
				Char = game:GetService("Players").LocalPlayer.Character
				if UIS:IsKeyDown(Enum.KeyCode.E) then
					PlrY = PlrY + 0.09
				end
	
				if UIS:IsKeyDown(Enum.KeyCode.Q) then
					PlrY = PlrY - 0.09
				end
				local suc, err = pcall(function()
					NoclipPart.CFrame = CFrame.new(HRP.Position.X, PlrY, HRP.Position.Z)
				end)
			end
		end
	end
	--[[THIS ALSO DO]]--
	game:GetService("RunService").RenderStepped:Connect(UpdatePosition)
end
task.spawn(SCRIPT_10)

return UI["1"], require;
